// Generated by view binder compiler. Do not edit!
package com.armuzzelectro.myprofileinformation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.armuzzelectro.myprofileinformation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDeleteLinkBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCancelDelete;

  @NonNull
  public final Button btnDeleteConfirm;

  @NonNull
  public final TextView deleteList;

  @NonNull
  public final TextView deleteTitle;

  private ActivityDeleteLinkBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnCancelDelete, @NonNull Button btnDeleteConfirm,
      @NonNull TextView deleteList, @NonNull TextView deleteTitle) {
    this.rootView = rootView;
    this.btnCancelDelete = btnCancelDelete;
    this.btnDeleteConfirm = btnDeleteConfirm;
    this.deleteList = deleteList;
    this.deleteTitle = deleteTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDeleteLinkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDeleteLinkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_delete_link, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDeleteLinkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancelDelete;
      Button btnCancelDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelDelete == null) {
        break missingId;
      }

      id = R.id.btnDeleteConfirm;
      Button btnDeleteConfirm = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteConfirm == null) {
        break missingId;
      }

      id = R.id.deleteList;
      TextView deleteList = ViewBindings.findChildViewById(rootView, id);
      if (deleteList == null) {
        break missingId;
      }

      id = R.id.deleteTitle;
      TextView deleteTitle = ViewBindings.findChildViewById(rootView, id);
      if (deleteTitle == null) {
        break missingId;
      }

      return new ActivityDeleteLinkBinding((ConstraintLayout) rootView, btnCancelDelete,
          btnDeleteConfirm, deleteList, deleteTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
